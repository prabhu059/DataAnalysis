# -*- coding: utf-8 -*-
"""numpy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/109yJCnQowq8By6_SSZaeZId5Y7o5nT4w
"""

import numpy as np
#creating arrays
arr=([1,2,3,4,5])
print(arr)

from google.colab import drive
drive.mount('/content/drive')

zeros_arr=np.zeros((3,3),dtype=int)
print(zeros_arr)
ones_arr=np.ones((2,2),dtype=int)
print(ones_arr)
arange_arr=np.arange(10)
print(arange_arr)

arange_arr=np.arange(0,100,5)
print(arange_arr)

#slicing
arr=np.array([1,2,3,4,5])
sliced_arr=arr[2:4]
print(sliced_arr)

#transpose of array
a=np.array([1,2,3,4,5,6,7,8])
b=a.T
print(b)

#slipt
b=np.split(a,4)
print(b)

#matrix multiplication
a=np.array([[1,2],[3,4]])
b=np.array([[5,6],[7,8]])
c=np.dot(a,b)
print(c)
#linear algebra eigen value
d=np.linalg.eig(c)
print(d)

data = np.arange(0, 100, 5)
print(data)
f = np.savetxt("/content/drive/MyDrive/DataSet/output.txt", data)
print(f)
v=np.loadtxt("/content/drive/MyDrive/DataSet/output")
print(v)

a=np.random.rand()
print(a)

b=np.random.randint(2,10)
c=np.random.randint(0,2)
print(b)
print(c)

a=np.array([[2,3],[4,6]])
print(a)
print(type(a))
print(a.ndim)
print(a.shape)

a=np.linspace(0.8,2,5)
print(a)

a=np.arange(24).reshape(3,2,4)
print(a)

a=np.array([[2,3],[4,6]])
b=np.array([[6,2],[4,7]])
print(a*b)
print(a@b)
print(np.dot(a,b))

from numpy import random
a=np.ones((2,3),dtype=int)
print(a)
print(a.sum())
print(a.sum(axis=1))
print(a.sum(axis=0))

a=np.floor(np.random.random((2,2)))
b=np.ceil(np.random.random((2,2)))
print(a)
print(b)
c=random.rand(2,2)
print(c)

from numpy import random
a=np.ones((2,3),dtype=int)
print(a)
print(a.max())
print(a.max(axis=1))
print(a.max(axis=0))

a=np.array([[2,3,4],[5,6,7]])
print(a)
print(a.max())
print(a.min())
print(a.min(axis=1))
print(a.min(axis=0))
print(a.max(axis=1))
print(a.max(axis=0))
print(a.cumsum())
print(a.cumsum(axis=1))
print(a.cumsum(axis=0))

a=np.array([2,3,5,6])
print(a.cumsum())

a=np.array([2,3,5,6,7,8])
a.resize(3,2)
print(a)
print(a.shape)

a=np.array([2,3,5,6,7,8])
a.resize(2,3)
b=np.array([1,3,7,9,2,8])
b.resize(2,3)
print(np.vstack((a,b)))
print(np.hstack((a,b)))

a=np.arange(30).reshape(2,3,5)
print(a)
print(np.dstack(a))

"""Number of rows become number of group,
Column become rows,
Group becomes colunm
"""

a1=np.eye(4)
print(a1)

a1=np.full((2,2),3)
print(a1)
print(a1.itemsize)

x=[1,2,3]
a=np.asarray(x)
print(a)
print(type(a))

x=np.array([1,4,0],float)
y=np.array([2,2,1],float)
print(np.inner(x,y))
print(np.outer(x,y))
print(np.cross(x,y))

"""inner:- element wise multiplication
outer:- 1st array is
"""

x=np.array([1.2,3.5,2.2,4.5,6.3,2.7,8.1])
a=np.rint(x)
print(a)

x=np.array([1,2,3,4,5])
y=np.array([6,7,8,9,10])
c=np.true_divide(x,y)
print(c)

x=np.array([1,1,2,2,3,3,4,4,5,5])
print(np.unique(x))

x=np.array([[1,2,3,4,5],[1,2,3,4,5]])
y=np.array([[6,7,8,9,10],[6,7,8,9,10]])
z=np.union1d(x,y)
print(z)

x=np.array([[1,2,3,4,5],[1,2,3,4,5]])
y=np.array([[6,7,8,4,10],[6,7,8,1,10]])
z=np.intersect1d(x,y)
print(z)

x=np.array([1,2,3,4,5])
y=np.array([1,2,7,8,9,10])
z=np.setdiff1d(x,y)
print(z)

a=8
b=6
c=np.hypot(a,b)
print(c)

x=np.sin(0)
print(x)

a=np.array([10,21,30,40,50,60])
b=np.array([20,21,2,20,25,25])
c=np.divmod(a,b)
print(c)

a=np.array([10,21,30,40,50,60])
b=np.array([20,21,2,20,25,25])
c=np.mod(a,b)
print(c)

a=np.array([10,21,30,40,50,60])
b=np.array([20,21,2,20,25,25])
c=np.divide(a,b)
print(c)

a=np.array([10,21,30,40,50,60])
b=np.array([20,21,2,20,25,25])
c=np.multiply(a,b)
print(c)

from numpy import random
x=random.normal(size=(2,3))
print(x)

x=random.normal(loc=1,scale=2,size=(2,3))
print(x)

"""loc=mean,scale=standard diviation,size=size of array"""

x=random.binomial(n=12,p=0.5,size=10)
print(x)

x=random.poisson(lam=2,size=10)
print(x)

x=random.choice([1,2,3,4,5])
print(x)

x=random.choice([3,5],p=[0.5,0.5],size=(3,5))
print(x)

import numpy as np
import  matplotlib.pyplot as plt
runs=np.array([100,50,91,78,89,25,34,19,9,10])
w=np.array([1,0,2,0,3,7,8,9,7,5])
plt.scatter(w,runs,color='blue')
plt.title('indvsaus_score')
plt.show()

tigar=np.linspace(-2*np.pi,2*np.pi,100)
print(tigar)
plt.plot(tigar,np.sin(tigar),color='pink',linestyle='dotted')
plt.title("sin(x)")
plt.show()

overs=np.arange(5,50,5)
overs_a=np.arange(5,30,5)
runs_i=np.array([25,51,84,131,160,189,220,250,267])
runs_a= np.array([15,41,94,110,151])
wickets = np.array([12,32,96])
 #plotting
plt.plot(overs,runs_i,color='blue',label='India')
plt.plot(overs_a,runs_a,color='yellow',label = 'Aus')
#combining two graphs
plt.legend(loc='best')
#displaying the final graph
plt.show()

import matplotlib.pyplot as plt
a = [230,560,780,127,128]
b = [200,160,270,127,400]
years = [1,2,3,4]
profit_a = [(a[i]-a[i-1]) for i in range(1,len(a))]
profit_b = [(b[i]-b[i-1]) for i in range(1,len(b))]
plt.subplot(2,1,2)
plt.plot(years,profit_a,color='hotpink',linewidth = '7',label =
'CompanyA',marker='>',ms='20',mec='m')
plt.subplot(2,1,1)
plt.plot(years,profit_b,color='black',linestyle='dotted',label =
'CompanyB',marker = 'H')
plt.show()

import numpy as np
import matplotlib.pyplot as plt
a = np.array([25, 60, 5, 10])
labels = ["[AIML", "Python", "Pandas", "Numpy"]
color = ['pink','black',"Numpy"'coral','yellow']
explo=[0.2,0,0,0]
plt.pie(a, labels=labels,explode =explo,shadow=True)
plt.show()

import seaborn as sns
import matplotlib.pyplot as ptlt
tips=sns.load_dataset("iris")
print(tips)
sns.scatterplot(x="sepal_width",y="sepal_length",data=tips)
plt.title("iris ")
plt.xlabel("sepal_width($)")
plt.ylabel("sepal_length($)")
plt.show()

tips=sns.load_dataset("tips")
print(tips)
sns.barplot(x="day",y="total_bill",data=tips)
plt.title("iris ")
plt.xlabel("total_bill($)")
plt.ylabel("tip($)")
plt.show()

tips=sns.load_dataset("tips")
print(tips)
sns.boxplot(x="day",y="total_bill",data=tips)
plt.title("Box plot of bill by day ")
plt.xlabel("total_bill($)")
plt.ylabel("tip($)")
plt.show()

tips=sns.load_dataset("tips")
print(tips)
sns.violinplot(x="day",y="total_bill",data=tips)
plt.title("Box plot of bill by day ")
plt.xlabel("total_bill($)")
plt.ylabel("tip($)")
plt.show()

tips=sns.load_dataset("tips")
print(tips)
sns.lineplot(x="day",y="total_bill",data=tips)
plt.title("Box plot of bill by day ")
plt.xlabel("total_bill($)")
plt.ylabel("tip($)")
plt.show()

import pandas as pd
import seaborn as sns
tips=sns.load_dataset("anscombe")
print(tips)
sns.lmplot(x="x",y="y",data=tips)
plt.title("Anscombe's Dataset ")
plt.xlabel("x($)")
plt.ylabel("y($)")
plt.show()

